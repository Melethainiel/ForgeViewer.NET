@page "/Viewer"
@using ForgeViewer.Sample.ViewModels
@using ForgeViewer.NET.Models
@using System.Net.Http.Json
@using ForgeViewer.NET.Viewing
@using ForgeViewer.Sample.Data
@inject ViewerViewModel ViewModel
@inject IServiceProvider ServiceProvider
@inject IHttpClientFactory Factory
<h3>Viewer</h3>

<div class="container-fluid d-flex h-100">
    <div class="flex-fill">
        <div id="demo" style="position: relative; height: calc(100% - 120px); width: calc(100% - 0px);">
        </div>
    </div>
</div>

@code {

    private GuiViewer3d GuiViewer3d { get; set; }
    private Viewing Viewing { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        Viewing = Viewing.Create(ServiceProvider);
        var opt = GetOptions();
        await Viewing.Initializer(opt, OnInit);
    }

    private async Task OnInit()
    {
        GuiViewer3d = GuiViewer3d.Create(ServiceProvider);
        await GuiViewer3d.Initializer("demo");
        await GuiViewer3d.AddEventListener("viewerResize", OnViewerInit);
        await GuiViewer3d.AddEventListener("viewerInitialized", OnViewerInit);
        
        await GuiViewer3d.Start();

        var urn = "urn:dXJuOmFkc2sub2JqZWN0czpvcy5vYmplY3Q6cGJpLXZpZXdlci9NYXF1ZXR0ZSUyMEdPRSUyMHYwNGQuaWZj";
        await Document.Load(ServiceProvider, urn, OnSuccess);
    }

    private async Task OnSuccess(Document document)
    {
        var getDefaultGeometry = await (await document.GetRoot()).GetDefaultGeometry();
        await GuiViewer3d.LoadDocumentNode(document, getDefaultGeometry);
    }

    private async Task OnViewerInit(object[]? obj)
    {
    }

    private async Task<Options> GetOptionsAsync()
    {
        var client = Factory.CreateClient("auth");
        var resp = await client.GetAsync("https://ifcdb.azurewebsites.net/Forge");
        var respAsObj = await resp.Content.ReadFromJsonAsync<Auth>();
        var token = respAsObj?.AccessToken ?? throw new Exception("Can't get access token");

        var options = new Options
        {
            AccessToken = token
        };
        return options;
    }

    private Options GetOptions()
    {
        var options = new Options
        {
            GetAccessToken = async () =>
            {
                var client = Factory.CreateClient("auth");
                var resp = await client.GetAsync("https://ifcdb.azurewebsites.net/Forge");
                var respAsObj = await resp.Content.ReadFromJsonAsync<Auth>();
                var token = respAsObj?.AccessToken ?? throw new Exception("Can't get access token");
                return token;
            }
        };
        return options;
    }

}